package agiStruct;
import agiStruct.KeyTag;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URL;
import java.net.URLClassLoader;
import java.util.*;
import javax.tools.JavaCompiler;
import javax.tools.ToolProvider;

import AGIUtil.randomAction;
public class Belief {
	private LinkedList<KeyTag> tags = new LinkedList<KeyTag>();
	private String NeuralPath = "";
	private randomAction randActObj;
	public Belief (){
	
	}
	public Belief(String pathIn) {
		this.NeuralPath = pathIn;
	}
	public Belief(String pathIn, randomAction randActObjIn) {
		this.NeuralPath = pathIn;
		this.randActObj = randActObjIn;
	}
	
	//randActObj management
	public void setRandomActionObj(randomAction raIn) {
		this.randActObj = raIn;
	}
	public randomAction getRandomActionObj() {
		return this.randActObj;
	}
	
	//NeuralPath management
	public void setNeuralPath(String neuralPathIn) {
		this.NeuralPath = neuralPathIn;
	}
	public String getNeuralPath() {
		return this.NeuralPath;
	}
	//tag management
	public void addTag(KeyTag tag){
		tags.add(tag);
	}
	
	public LinkedList<KeyTag> getTags() {
		return tags;
	}
	public void removeTag(KeyTag tag) {
		tags.remove(tag);
	}
	
	//main method is for testing
	public static void main(String[] args) throws IOException, ClassNotFoundException, InstantiationException, IllegalAccessException{
		Belief test = new Belief();
		KeyTag testTag = new KeyTag("J","S", 50);
		test.addTag(testTag);
		System.out.println(test.getTags().size());
		test.Fire();
	}
	
	//Neural Pathway Fire (Execution of belief based on stimuli)
	public void Fire() throws IOException, ClassNotFoundException, InstantiationException, IllegalAccessException {
		
		//Write neural path to .java file
		String path = this.getClass().getProtectionDomain().getCodeSource().getLocation().toString();
		path = path.substring(5);
		File beliefSource = new File(path + "beliefSource.java");
		FileWriter writer = new FileWriter(beliefSource);
		
		//the line below is only for testing/reference purposes
		//this.NeuralPath = "import java.io.*;public class beliefSource{public beliefSource() throws IOException { Runtime run = Runtime.getRuntime();String command = \"touch /home/agi/Desktop/eclipse/AGI/bin/hahaha.java\";run.exec(command); } }";
		
		writer.write(this.NeuralPath);
		writer.close();
		
		//Compile it
		Runtime run = Runtime.getRuntime();
		JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
		compiler.run(null, null, null, beliefSource.getPath());
		
		//Run it
		URL[] url = new URL[] {beliefSource.toURI().toURL()};
		URLClassLoader loader = new URLClassLoader(url);
		Class<?> cls = Class.forName("beliefSource", true, loader);
		Object instance = cls.newInstance();
		//Delete the .java and .class files
		String command = "rm " + path + "beliefSource.class";
		run.exec(command);
		command = "rm " + path + "beliefSource.java";
		run.exec(command);
		
		
	}
	
}
