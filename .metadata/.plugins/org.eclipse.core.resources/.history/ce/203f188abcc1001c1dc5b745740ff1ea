//needs to be rewritten to allow for dynamic adjustment (allow the ai to adjust structure)
package agiStruct;

import java.awt.Point;
import java.awt.image.BufferedImage;
import java.util.Calendar;

public class Env {
	//instance variables for each sense
	
	//mouse location (x, y)
	Point mouseLocation;
	
	//is mouse pressed ([0] = left mouse data; [1] = middle mouse data; [2] = right mouse data;
	//[3] = scroll wheel up data; [4] = scroll wheel down data;)
	int[] mouseButtonPressedInfo;
	boolean leftMouseButtonPressed;
	boolean middleMouseButtonPressed;
	boolean rightMouseButtonPressed;
	boolean scrollWheelUpPressed;
	boolean scrollWheelDownPressed;
	
	//keypress info (the series of strings pressed at the current moment)
	String keyPressed;
	
	//current monitor display (2d array of pixels)
	BufferedImage currentDisplay;
	//number of mouse buttons
	int numOfMouseButtons;
	
	//current date, time, timezone, etc.
	Calendar calendar;
	
	public Env() {
		
	}
	
	//gets
	public String getEnvVarsString() {
		String mousePointVar = "java.awt.Point mouseLocation = new java.awt.Point(" + this.getMouseLocation().getX() + ", " + this.getMouseLocation().getY() + ");";
		String leftMousePressedVar = "boolean leftMouseButtonPressed = " + this.getLeftMouseButtonPressed() + ";";
		String middleMousePressedVar = "boolean middleMouseButtonPressed = " + this.getMiddleMouseButtonPressed() + ";";
		String rightMousePressedVar = "boolean rightMouseButtonPressed = " + this.getRightMouseButtonPressed() + ";";
		String keyPressedVar = "String keyPressed = \"" + this.getKeyPressed() + "\";";
		String numOfMouseButtonsVar = "int numOfMouseButtons = " + this.getNumOfMouseButtons() + ";";
		String currentDisplayVar = "java.awt.image.BufferedImage currentDisplay = new java.awt.image.BufferedImage(" + ;
		String envVars = mousePointVar + leftMousePressedVar + middleMousePressedVar + rightMousePressedVar + keyPressedVar;
		return envVars;
	}
	public String getKeyPressed() {
		return keyPressed;
	}
	public BufferedImage getCurrentDisplay() {
		return currentDisplay;
	}
	
	public boolean getLeftMouseButtonPressed() {
		return this.leftMouseButtonPressed;
	}
	
	public boolean getMiddleMouseButtonPressed() {
		return this.middleMouseButtonPressed;
	}
	
	public boolean getRightMouseButtonPressed() {
		return this.rightMouseButtonPressed;
	}
	
	public boolean getScrollWheelUpPressed() {
		return this.scrollWheelUpPressed;
	}
	
	public boolean getScrollWheelDownPressed() {
		return this.scrollWheelDownPressed;
	}
	
	public Point getMouseLocation() {
		return mouseLocation;
	}
	
	public int[] getMouseButtonPressedInfo() {
		return mouseButtonPressedInfo;
	}
	
	public int getNumOfMouseButtons() {
		return numOfMouseButtons;
	}
	
	public Calendar getCalendar() {
		return calendar;
	}
	//sets
	public void setKeyPressed(String keyIn) {
		this.keyPressed = keyIn;
	}
	public void setCurrentDisplay(BufferedImage imageIn) {
		this.currentDisplay = imageIn;
	}
	
	public void setMouseLocation(Point inputLocation) {
		this.mouseLocation = inputLocation;
	}

	public void setMouseButtonsPressed (int[] buttonsInfoIn) throws Exception {
		if (buttonsInfoIn[0] == 0) {
			this.leftMouseButtonPressed = false;
		} else {
			this.leftMouseButtonPressed = true;
		}
		
		if (buttonsInfoIn[1] == 0) {
			this.middleMouseButtonPressed = false;
		} else {
			this.middleMouseButtonPressed = true;
		}
		
		if (buttonsInfoIn[2] == 0) {
			this.rightMouseButtonPressed = false;
		} else {
			this.rightMouseButtonPressed = true;
		}
	}
	
	public void setNumOfMouseButtons(int numButtons) {
		numOfMouseButtons = numButtons;
	}
	
	public void setCalendar (Calendar c) {
		calendar = c;
	}
	@Override
	public boolean equals(Object o) {
		if (o == this){
			return true;
		}
		if (o instanceof Env){
			Env c = (Env) o;
			boolean output = false;
			if ((c.getMouseLocation() == this.getMouseLocation()) 
					&& (c.getMouseButtonPressedInfo() == this.getMouseButtonPressedInfo())
					&& (c.getNumOfMouseButtons() == this.getNumOfMouseButtons())
					&& (c.getCalendar().getTime() == this.getCalendar().getTime())
					&& (c.getCalendar().getTimeZone() == this.getCalendar().getTimeZone())){ //variables (that describe conditions) are the same
				output = true;
			} else {
				output = false;
			}
			return output;
		} else {
			return false;
		}
		
	}

	@Override
	public String toString(){
		return "MouseLocation: " + this.getMouseLocation().toString();
	}
}
